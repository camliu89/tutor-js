#!/bin/bash

set -ex

if [ "$TRAVIS" == "true" ]; then
  TARGET_BRANCH=$TRAVIS_BRANCH
  echo running under travis, fetching $TARGET_BRANCH
  git fetch
  git branch -vv
  git remote show origin

  git fetch origin $TARGET_BRANCH
#  git branch --set-upstream-to=origin/$TARGET_BRANCH $TARGET_BRANCH
#  git branch --track $TARGET_BRANCH origin/$TARGET_BRANCH
#  git branch --set-upstream-to master origin/master
#  git branch --set-upstream $TARGET_BRANCH origin/$TARGET_BRANCH
  git fetch origin
  git checkout --track origin/$TARGET_BRANCH
else
  TARGET_BRANCH=master
fi

if [ $# -eq 0 ]; then
    $(npm bin)/eslint {tutor,shared,exercises}
    exit $?
fi

if [ "$1" == "branch" ]; then
    head=$(git merge-base HEAD $TARGET_BRANCH)
    cmd="git diff --name-status $head */{src,specs}"
elif [ "$1" == "staged" ]; then
    cmd="git status --short */{src,specs}"
else
    echo "unknown command: switch $1"
    exit 1
fi

files=`eval $cmd | egrep '^[^D|^R].*(jsx?)$' | awk '{ print $2 }'`
if [ ! -z "$files" ]; then
    $(npm bin)/eslint $2 $files
fi
